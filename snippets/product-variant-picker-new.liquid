{% comment %}
  Renders product variant-picker

  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} Id of the product form to which the variant picker is associated.
  - update_url: {Boolean} whether or not to update url when changing variants. If false, the url isn't updated. Default: true (optional).
  Usage:
  {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
{% endcomment %}
{% style %}
  .variant-value-new {
    width: 35px;
    height: 35px;
    font-size: 14px;
  }

  .variant-value {
    cursor: pointer;
    border: 2px solid transparent; /* Default state with transparent border */
    padding: 5px; /* Padding for better visual appearance */
    margin: 2px; /* Space between variant options */
  }

  .variant-value.selected {
    border-color: #333; /* Border color when selected */
  }

  .variant-value.variant-unavailable {
    cursor: not-allowed;
    background-color: #f0f0f0;
    color: #ccc; /* Gray out text to show it's not selectable */
    border-color: #ccc; /* Optionally add a gray border */
    opacity: 0.5; /* Optionally reduce opacity */
  }
{% endstyle %}
{%- unless product.has_only_default_variant -%}
  <form
    action="/cart/add"
    method="post"
    enctype="multipart/form-data"
    novalidate="novalidate"
  >
    {% for option in product.options_with_values %}
      <div class="variant-option">
        <h3>{{ option.name }}</h3>
        <div class="variant-values" style="display: inline-flex;">
          {% for value in option.values %}
            {% assign variant_found = false %}
            {% for variant in product.variants %}
              {% if variant.options contains value and variant.available %}
                <div
                  class="variant-value variant-value-new"
                  data-product-id="{{ product.id }}"
                  data-value="{{ value }}"
                  data-option="{{ option.name }}"
                  data-variant-id="{{ variant.id }}"
                  data-variant-price="{{ variant.price | money }}"
                  data-variant-image="{{ variant.featured_image | default: product.featured_image | img_url: 'master' }}"
                >
                  <!-- Placeholder for the value, filled by JavaScript -->
                </div>
                {% assign variant_found = true %}
                {% break %}
              {% endif %}
            {% endfor %}
            {% unless variant_found %}
              <div
                class="variant-value variant-value-new variant-unavailable"
                data-product-id="{{ product.id }}"
                data-value="{{ value }}"
                data-option="{{ option.name }}"
                data-variant-id="{{ variant.id }}"
                data-variant-image="{{ variant.featured_image | default: product.featured_image | img_url: 'master' }}"
              >
                <!-- Placeholder for the value, filled by JavaScript -->
                <p>
              {% if option.name == 'Size' %}

                {{ value }}
              {% endif %}
                </p>
              </div>
            {% endunless %}
          {% endfor %}
        </div>
      </div>
    {% endfor %}

    <!-- Hidden input to store selected variant ID -->
    <input type="hidden" name="id" class="product-variant-id">

    <!-- Add to Cart Button -->
    <button
      type="submit"
      name="add"
      style="
        min-height: 30px; font-size: 14px; background-color: black !important;
        color: white !important;
        height: 30px !important;
        text-transform: uppercase;
        font-family: Plus Jakarta Sans, sans-serif !important;
      "
      class="overboard-buy-button button button--full-width button--secondary product-form__cart-submit"
      {% unless product.available %}
        disabled
      {% endunless %}
    >
      <span>{{ 'products.product.add_to_cart' | t }}</span>
    </button>
  </form>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      document.querySelectorAll('.product-card-wrapper').forEach(function (card) {
        let productID = card.getAttribute('data-product-id');

        let variantOptions = card.querySelectorAll('.variant-value[data-product-id="' + productID + '"]');
        let productPrice = card.querySelector('.price-item[data-price-productid="' + productID + '"]');
        let variantInput = card.querySelector('.product-variant-id[data-variant-productid="' + productID + '"]');

        variantOptions.forEach((option) => {
          let value = option.getAttribute('data-value');

          let variantId = option.getAttribute('data-variant-id');
          let variantPrice = option.getAttribute('data-variant-price');

          // Set up the variant map
          if (variantMap.colors[value]) {
            option.style.backgroundColor = variantMap.colors[value];
          } else if (variantMap.sizes[value]) {
            option.textContent = variantMap.sizes[value];
            option.classList.add('text-type');
          } else {
            option.textContent = value;
            option.classList.add('text-type');
          }

          if (!variantId) {
            option.classList.add('variant-unavailable');
            option.style.pointerEvents = 'none';
            option.style.opacity = '0.5';
          } else {
            option.addEventListener('click', function () {
              // Remove 'selected' class from all options in this specific card and add to the clicked one
              variantOptions.forEach((opt) => {
                opt.classList.remove('selected');
              });
              option.classList.add('selected');

              if (variantInput) {
                variantInput.value = variantId;
              }

              // Update the price display specific to this product card
              if (productPrice && variantPrice) {
                productPrice.textContent = variantPrice;
              }
            });
          }
        });

        // Automatically select the first available variant
        const firstAvailableVariant = card.querySelector('.variant-value:not(.variant-unavailable)');
        if (firstAvailableVariant) {
          firstAvailableVariant.click();
        }
      });
    });
  </script>
{%- endunless -%}
